apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config-prepod
data:
  postgres.conf: |
    listen_addresses = '*'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: odoo-config-prepod
data:
  odoo.conf: |
    [options]
    admin_user = admin@example.com
    admin_passwd = admin
    db_host = odoo-postgres-service-prepod
    db_port = 5432
    db_user = odoo
    db_password = odoo
    addons_path = /mnt/extra-addons
    debug_mode = True
    test_enable = True
    test_all = True
    [database]
    db_name = odoo
    db_filter = odoo_*
---
apiVersion: v1
kind: Service
metadata:
  name: odoo-postgres-service-prepod
spec:
  selector:
    app: odoo-postgres-prepod
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: odoo-service-prepod
spec:
  selector:
    app: odoo-prepod
  ports:
    - protocol: TCP
      port: 8069
      targetPort: 8069
      nodePort: 30010
  type: NodePort
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv-prepod
  labels:
    type: local
spec:
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 2Gi
  storageClassName: storageclass-odoo
  local:
    path: /home/master/volume/pre-production/postgres
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
              - k8s-master
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc-prepod
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: storageclass-odoo
  volumeName: postgres-pv-prepod
---
apiVersion: v1
kind: Pod
metadata:
  name: odoo-postgres-pod-prepod
  labels:
    app: odoo-postgres-prepod
spec:
  containers:
    - name: postgres-prepod
      image: postgres:15
      command: ["postgres"]
      args: ["-c", "config_file=/etc/postgresql/postgresql.conf"]
      env:
        - name: POSTGRES_USER
          value: odoo
        - name: POSTGRES_PASSWORD
          value: odoo
        - name: PGDATA
          value: /var/lib/postgresql/data
      volumeMounts:
        - name: postgres-config-volume
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        - name: postgres-data-volume
          mountPath: /var/lib/postgresql/data/pgdata
  volumes:
    - name: postgres-config-volume
      configMap:
        name: postgres-config-prepod
    - name: postgres-data-volume
      persistentVolumeClaim:
        claimName: postgres-pvc-prepod
---
apiVersion: v1
kind: Pod
metadata:
  name: odoo-pod-prepod
  labels:
    app: odoo-prepod
spec:
  initContainers:
    - name: wait-for-postgres
      image: bitnami/kubectl:1.27.7-debian-11-r0
      command: ["sh", "-c", "until kubectl --namespace pre-production get pod odoo-postgres-pod-prepod -o jsonpath='{.status.phase}' | grep -q Running; do sleep 1; done"]
  containers:
    - name: odoo-prepod
      image: odoo:16
      ports:
        - containerPort: 8069
      env:
        - name: HOST
          value: odoo-postgres-service-prepod
        - name: PORT
          value: "5432"
        - name: USER
          value: odoo
        - name: PASSWORD
          value: odoo
        - name: DATABASE
          value: odoo
      volumeMounts:
        - name: config-volume
          mountPath: /etc/odoo/odoo.conf
          subPath: odoo.conf
        - name: addons-volume
          mountPath: /mnt/extra-addons
  volumes:
    - name: config-volume
      configMap:
        name: odoo-config-prepod
    - name: addons-volume
      hostPath:
        path: /home/master/volume/pre-production/odoo/addons
